BOSMINER_CONF="/etc/bosminer.toml"

BOSMINER_CONF_DST="/tmp/bosminer.toml"
CONFIG_GENERATOR="sysupgrade_script"

get_bosminer_toml_version() {
	awk -f - "$BOSMINER_CONF" <<-EOF
		/^\[format\]\$/ {
			f = "y"; next
		}
		/^\[.*\]\$/ {
			f = "n"; next
		}
		\$1 == "version" {
			print substr(\$3, 2, length(\$3)-2)
		}
	EOF
	return 0
}

migrate_bosminer_toml_to_open() {
	echo "Migrating BOSminer+ configuration file to open version..."

	local timestamp=$(date +%s)
	awk -f - "$BOSMINER_CONF" > "$BOSMINER_CONF_DST" <<-EOF
		function reset() {
				f = "n"; a = "n"
				g = "n"; t = "n"
		}

		BEGIN {
				reset()
		}
		/^\[format\]\$/ {
				reset(); f = "y"
				print; next
		}
		/^\[autotuning\]\$/ {
				reset(); a = "y"
				print "# " \$0; next
		}
		/^\[.*\]\$/ {
				if (f == "y") {
						if (g == "n") print "generator = '${CONFIG_GENERATOR}'"
						if (t == "n") print "timestamp = ${timestamp}"
						if (g == "n" || t == "n") print ""
				}
				reset()
		}
		f == "y" && \$1 == "version" {
				print "# " \$0; print "version = '1.0'"; next
		}
		f == "y" && \$1 == "generator" {
				g = "y"; print "generator = '${CONFIG_GENERATOR}'"; next
		}
		f == "y" && \$1 == "timestamp" {
				t = "y"; print "timestamp = ${timestamp}"; next
		}
		a == "y" {
				print "# " \$0; next
		}
		{print}
	EOF
	return 0
}

migrate_bosminer_toml_to_plus() {
	echo "Migrating BOSminer configuration file to plus version..."

	local miner_psu_power_limit=$(fw_printenv -n miner_psu_power_limit 2>/dev/null)
	local autotuning_enabled="yes"

	case $miner_psu_power_limit in
		default)
			miner_psu_power_limit=
		;;
		"")
			autotuning_enabled="no"
			miner_psu_power_limit=
		;;
	esac

	awk -f - "$BOSMINER_CONF" > "$BOSMINER_CONF_DST" <<-EOF
		/^\[format\]\$/ {
			f = "y"
			print; next
		}
		/^\[.*\]\$/ {
			f = "n"
		}
		f == "y" && \$1 == "version" {
			print "# " \$0; print "version = '1.0+'"; next
		}
		{print}
		END {
			if ("${autotuning_enabled}" == "yes") {
				print ""
				print "[autotuning]"
				print "enabled = true"
				if ("${miner_psu_power_limit}") {
					print "psu_power_limit = ${miner_psu_power_limit}"
				}
			}
		}
	EOF
	return 0
}

migrate_bosminer_toml() {
	# Do not migrate BOSminer config when BOSminer config is not present
	[ ! -f "$BOSMINER_CONF" ] && return 0

	local current_toml_version=$(get_bosminer_toml_version)
	# Exit when format version cannot be determined
	[ -z "$current_toml_version" ] && return 0

	local current_toml_version_plus=""
	case $current_toml_version in *+) current_toml_version_plus="+";; esac

	if [ -n "$UPGRADE_FW_VERSION_PLUS" ]; then
		# Do the migration when upgrading from open to plus version
		[ -z "$current_toml_version_plus" ] && migrate_bosminer_toml_to_plus
	else
		# Do the migration when downgrading from plus to open version
		[ -n "$current_toml_version_plus" ] && migrate_bosminer_toml_to_open
	fi

	return 0
}

replace_bosminer_conf() {
	local conf_dir_path=$(modify_configs)
	local conf_action="discard"

	cp "${BOSMINER_CONF_DST}" "${conf_dir_path}/etc/" 2>/dev/null && \
		conf_action="store"

	finish_configs_modification $conf_action
	return 0
}

check_image() {
	check_fw_version $1 && {
		migrate_bosminer_toml
	}
}

pre_upgrade() {
	local board_name=$1
	local tar_file=$2

	replace_bosminer_conf
	return
}
